ws2812b_rpi
===========
Raspberry Pi version of a WS2812b LED library with a very simple interface and good support for matrix-like wiring schemes.
---------------------------------------------------------------------------------------------------------------------------
This is for a raspberry pi controlling WS2812B LED strands directly from its pin GPIO21 (PCM mode) or other pins (PWM/SPI).
Parts of this strand might be arranged in any kind of matrix shape, with any kind of wiring scheme
between these parts.
ws2812b offers image-processing-like commands and support for matrix-like connections between parts
of strand.
It is an "addition/simplification for C" to J. Graff's gorgeous library rpi_ws281x and must be used together with it.
---------------------------------------------------------------------------------------------------------------------------
Find reference for wiring schemes in file ws2812b_rpi.h.
A resistor of 220...470 ohms should be used for connecting RPi GPIO 21 (PCM_DOUT) and ws2812b Din data pin.
A capacitor of around 100uF should be connected between +5V and GND of strand. Both resistor and capacitor should be placed
close to the strand.
A diode like 1N4007 (or any other 1A type) should be used to get RPi's +5V to 5V of strand (thus reducing voltage, so that
RPi's signal will have an appropriate level for the strand.
---------------------------------------------------------------------------------------------------------------------------
Note that when using your code you will usually have to start with a call of
  initLEDsPCM(matrixWidthOrJustLengthForNoMatrix,matrixHeightOrJustOneForNoMatrix,matrixTypeAnyOfSixteenPossibleTypes);
and end with a call of
  endLEDs();
---------------------------------------------------------------------------------------------------------------------------
main.c and main2.c are examples for testing. A Makefile accompanies these examples. Copy it and use it for your own code.
You might first edit Makefile and change target and file names and also your editor's name before you start your project.
Afterwards
Type "make edit" and enter your code.
Type "make run" to start your code.
Type CTRL-\ to stop, or, if using STOPPABLE macro for your main loop, simply type CTRL-C to stop.
---------------------------------------------------------------------------------------------------------------------------
Installation:
Download/git_clone J. Graffs library ws281x and install it. 
Once done, type "sudo make install" to install this library ws2812b_rpi.
Usage:
Copy Makefile template from examples to a new directory.
Type "make make" to set a program name, then type "make edit" to edit the program and type "make run" to run it.
If reluctant to typing make commands, use your favourite editor directly and register "run"-target to it (i.e., bind a key
to running command "make run").
---------------------------------------------------------------------------------------------------------------------------
Commands:

initLEDs(width,height,type,gpio); // attach strand to Rpi
                                  // please add this at the beginning of your program
                                  // for a linear strand (no matrix) set width to length of strand and height to 1
                                  // for type see ws2812b_rpi.h or WIRING.txt
                                  // preferred gpio number should be 21 for PCM mode
                                 
initLEDsPCM(width,height,type);   // shortcut for choosing gpio number 21 (PCM mode) -- usually this is the best choice
initLEDsPWM(width,height,type);   // shortcut for choosing gpio number 18 (PWM mode) -- RPi PWM audio should be deactivated
initLEDsSPI(widht,height,type);   // showtcut for choosing gpio number 12 (SPI mode) -- RPi core speed should be set to a
                                                                                        fixed value on Pi 3 and above
setR(row,column,color);       // set red value for pixel at matrix position row,column
                              // column should be zero for single linear strands (wiring type 1)
                              // color ranges from 0x00 to 0xFF

setG(row,column,color);       // dito for green value

setB(row,column,color);       // dito for blue value

setRGB(row,column,fullcolor); // set all three color values at once
                              // full color ranges from 0x000000 to 0xFFFFFF
                              // values can be taken from image processing or color picker tools
                              // byte order is RRGGBB, e.g. 0xFACE00 means red is FF,green AA, blue is 00 (a reddish yellow)

getR(row,column);             // read-out function for red channel of addressed pixel
                              // possible range from 0x00...0xFF

getG(row,column);             // dito for green channel

getB(row,column);             // dito for blue channel

getRGB(row,column);           // read-out function for full color value of addressed pixel
                              // possible range from 0x000000 to 0xFFFFFF

showLEDs();                   // will display all pixels (with the colors that have been set before)

clearLEDs();                  // reset all color values to 0 and display a "blank screen"

setBrightness(maxValue);      // used for dimming (good to the eyes!)
                              // maxValue ranges from 0x00 (full dimming) to 0xFF (no dimming)
                              // will usually be called once at the beginning of the program 
                              // but can also be called several times for special effects
                              // good values for maxValue while prototyping are 3...10
                              // will change intensity of display by limiting color resolution
                              // will effect all subsequent calls to showLEDs()

endLEDs();										// will release RPi's hardware, please call this at the end of your program, especially if in
                              // PWM or in SPI mode
---------------------------------------------------------------------------------------------------------------------------
